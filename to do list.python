class ToDoList:
    def __init__(self):
        self.tasks = [] 

    def add_task(self, task):
        self.tasks.append(task)
        print(f"Task '{task['task_name']}' added with ID: {task['task_id']}.")

    def remove_task(self, task_id):
        if 0 <= task_id < len(self.tasks):
            removed_task = self.tasks.pop(task_id)
            print(f"Task '{removed_task['task_name']}' with ID {task_id} has been removed.")
        else:
            print(f"Invalid task ID: {task_id}. Please enter a valid task ID.")

    def mark_task_complete(self, task_id):
        if 0 <= task_id < len(self.tasks):
            self.tasks[task_id]['completed'] = True
            print(f"Task '{self.tasks[task_id]['task_name']}' with ID {task_id} marked as completed.")
        else:
            print(f"Invalid task ID: {task_id}. Please enter a valid task ID.")

    def display_tasks(self):
        if not self.tasks:
            print("Your to-do list is empty.")
        else:
            print("\nYour To-Do List:")
            for task in self.tasks:
                status = "Completed" if task['completed'] else "Pending"
                print(f"ID: {task['task_id']} - {task['task_name']} - {status}")

def main():
    todo_list = ToDoList()  # Create a ToDoList object

    while True:
        print("\nTo-Do List Menu:")
        print("1. Add Task")
        print("2. View All Tasks")
        print("3. Remove Task")
        print("4. Mark Task as Completed")
        print("5. Exit")
        choice = input("Enter your choice (1-5): ")

        if choice == "1":
            task_name = input("Enter the task name: ")
            task = {
                'task_id': len(todo_list.tasks),  # Auto-generate task ID
                'task_name': task_name,
                'completed': False
            }
            todo_list.add_task(task)

        elif choice == "2":
            todo_list.display_tasks()
        elif choice == "3":
            todo_list.display_tasks()
            try:
                task_id = int(input("Enter the task ID to remove: "))
                todo_list.remove_task(task_id)
            except ValueError:
                print("Please enter a valid task ID (integer).")
        elif choice == "4":
            todo_list.display_tasks()
            try:
                task_id = int(input("Enter the task ID to mark as completed: "))
                todo_list.mark_task_complete(task_id)
            except ValueError:
                print("Please enter a valid task ID (integer).")
        elif choice == "5":
            print("Goodbye!")
            break

        else:
            print("Invalid choice. Please try again.")
if __name__ == "__main__":
    main()
